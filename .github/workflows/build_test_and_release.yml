name: Construction, tests et Release sur GitHub

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  linting_pycount:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - uses: actions/setup-python@v2
        with:
          python-version: 3.6     
      - uses: ricardochaves/python-lint@v1.4.0
        with:
          python-root-list: "library/RAVE"
          use-pylint: false
          use-pycodestyle: false
          use-flake8: true
          use-black: false
          use-mypy: false
          use-isort: false
          extra-pylint-options: ""
          extra-pycodestyle-options: ""
          extra-flake8-options: "--exclude=__init__.py"
          extra-black-options: ""
          extra-mypy-options: ""
          extra-isort-options: ""
    
  test_RAVE:
    needs: linting_pycount
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]
    steps:
      - name: Obtention du code
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Installation de Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          
      - name: Exécution des tests
        working-directory: library/RAVE
        run: python3 -m unittest
        
  create_release:
    needs: [test_RAVE]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Calcul du numéro de version à partir des tags/commits
        uses: paulhatch/semantic-version@v4.0.2
        id: semantic_version
        with:
          tag_prefix: "v"
          major_pattern: "(MAJOR)"
          minor_pattern: "(MINOR)"
          format: "${major}.${minor}.${patch}"
          short_tags: false
          bump_each_commit: true
    
      - name: Génération du numéro de version
        id: generate_version_output
        run: echo "::set-output name=version::${{ steps.semantic_version.outputs.major }}.${{ steps.semantic_version.outputs.minor }}.${{ steps.semantic_version.outputs.patch }}"
        shell: bash
      
      - name: Affichage de la version
        run: echo "Version ${{ steps.generate_version_output.outputs.version }}"
        shell: bash
        
      - name: Création du release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
        with:
          tag_name: v${{ steps.generate_version_output.outputs.version }}
          release_name: demo_integration-v${{ steps.generate_version_output.outputs.version }}
          body: |
              Dernière compilation de demo_integration.
          draft: false
          prerelease: true

      - name: Écriture du fichier pour la destination du release.
        run: echo "${{ steps.create_release.outputs.upload_url }}" > release_url.txt
      - name: Téléversement de release_url
        uses: actions/upload-artifact@v2
        with:
          name: release_url
          path: release_url.txt
          
      - name: Écriture du fichier pour la version du release.
        run: echo "${{ steps.generate_version_output.outputs.version }}" > release_version.txt
      - name: Téléversement de release_version
        uses: actions/upload-artifact@v2
        with:
          name: release_version
          path: release_version.txt     
  
  upload_RAVE:
    needs: create_release
    runs-on: ubuntu-latest
    steps:
    - name: Obtention du code
      uses: actions/checkout@v2
      with:
        submodules: recursive
        
    - uses: actions/download-artifact@v2
      with:
        name: release_url
    - name: Obtention de release_url
      id: get_release_info
      run: |
        echo "::set-output name=upload_url::$(cat release_url.txt)"
       
    - uses: actions/download-artifact@v2
      with:
        name: release_version   
    - name: Obtention de release_version
      id: get_release_version
      run: |
        echo "::set-output name=version::$(cat release_version.txt)"
  
    - name: Changement du numéro de version dans setup.py
      working-directory: library/RAVE
      run: |
        sed -i 's/version="dev"/version="${{steps.get_release_version.outputs.version}}"/g' setup.py
   
    - name: Compilation
      working-directory: library/RAVE
      run: |
        python3 -m pip install --upgrade pip
        python3 -m pip install --upgrade build
        python3 -m build
        
    - name: Obtention du nom du fichier
      id: get_wheel_filename
      working-directory: library/RAVE/dist
      run: |
        echo "::set-output name=filename::$(ls *.whl)"
      
    - name: Téléversement du fichier
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release_info.outputs.upload_url }}
        asset_path: library/RAVE/dist/${{steps.get_wheel_filename.outputs.filename}}
        asset_name: ${{steps.get_wheel_filename.outputs.filename}}
        asset_content_type: application/octet-stream